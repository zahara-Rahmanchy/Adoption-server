// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id String @id @unique @default(uuid()) 
  name String
  email String  @unique
  contactNumber String @default("")
  password String
  
  role userRoles 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  adoptionRequest AdoptionRequest[]
  active Boolean @default(true)
  @@map("users")
}

model Pets {
  id String @id @unique @default(uuid()) 
  name String
  image String[]
  species String
  breed String 
  age Int
  size petSize
  specialNeeds String[] @default([])
  gender String 
  location String
  description String
  temperament String
  healthStatus String
  adoptedStatus AdoptedStatus @default(PENDING)
  adoptionRequirements String 
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  adoptionRequest AdoptionRequest[]
}
enum userRoles{
  User
  Admin
 
}
model AdoptionRequest {
  id String @id @unique @default(uuid()) 
  userId String 
  petId String
  status AdoptionStatus @default(PENDING) //The status of the adoption request (e.g., PENDING, APPROVED, REJECTED). Default PENDING.
  petOwnershipExperience String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user User @relation(fields: [userId], references: [id])
  pet Pets @relation(fields: [petId], references: [id])
  @@map("adoptionRequests")
 
}

enum petSize{
  Small
  Medium
  Large
}

enum AdoptionStatus{
  PENDING
  APPROVED
  REJECTED
}

enum AdoptedStatus{
   PENDING
   ADOPTED
} 